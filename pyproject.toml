[project]
name = "letters"
version = "0.1.0"
description = "Letters API"
authors = [
    {name = "shaun", email = "shaunhegarty@users.noreply.github.com"},
]
dependencies = [
    "fastapi==0.104.1",
    "psycopg2-binary==2.9.3",
    "uvicorn>=0.24.0.post1",
    "requests==2.31.0",
    "SQLAlchemy==2.0.23",
    "sqlmodel==0.0.14",
    "pydantic==2.5.2",
    "pydantic-core==2.14.5",
    "SQLAlchemy-Utils==0.41.1",
    "python-dotenv>=1.0.0",
    "honeycomb-opentelemetry>=0.2.3b0",
    "opentelemetry-instrumentation-fastapi>=0.41b0",
    "opentelemetry-instrumentation-dbapi>=0.41b0",
    "opentelemetry-instrumentation-logging>=0.41b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "opentelemetry-instrumentation-urllib>=0.41b0",
    "opentelemetry-instrumentation-httpx>=0.41b0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-instrumentation-urllib3>=0.41b0",
    "tqdm>=4.66.1",
    "alembic>=1.13.1",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
embedding = [
    "sentence-transformers>=3.0.1",
]


[tool.pytest.ini_options]
pythonpath = "src"


[tool.uv]
dev-dependencies = [
    "ruff>=0.6.2",
    "pytest>=8.3.2",
    "annotated-types>=0.7.0",
    "types-requests>=2.32.0.20240712",
    "types-sqlalchemy-utils>=1.1.0",
    "mypy>=1.11.2",
    "mypy-extensions>=1.0.0",
    "httpx>=0.27.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "alembic",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
ignore = ["B008", "D100", "D101", "D102", "D103", "D105", "D107", "COM812", "UP007", "ANN101"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

